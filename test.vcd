$version Generated by VerilatedVcd $end
$date Fri Apr  9 16:24:18 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 t clk_i $end
  $var wire  1 v ext_data_i $end
  $var wire  1 x halt_o $end
  $var wire  1 u n_rst_i $end
  $var wire  8 w result_o [7:0] $end
  $scope module core $end
   $var wire  1 & a_imm_alu $end
   $var wire 10 s addr_pc [9:0] $end
   $var wire  8 / alu_result_data [7:0] $end
   $var wire  1 t clk_i $end
   $var wire  1 v ext_data_i $end
   $var wire  4 $ flags_alu [3:0] $end
   $var wire  3 % func_alu [2:0] $end
   $var wire  1 x halt_o $end
   $var wire  8 , immediate [7:0] $end
   $var wire 24 ) instruction [23:0] $end
   $var wire  2 # mode_pc [1:0] $end
   $var wire  1 u n_rst_i $end
   $var wire  6 ' op_code [5:0] $end
   $var wire  5 * rd_addr [4:0] $end
   $var wire  8 . rd_data [7:0] $end
   $var wire  8 w result_o [7:0] $end
   $var wire  5 + rs_addr [4:0] $end
   $var wire  8 - rs_data [7:0] $end
   $var wire  1 ( wr_en_rf $end
   $scope module alu0 $end
    $var wire  8 P a_i [7:0] $end
    $var wire  8 - b_i [7:0] $end
    $var wire  4 $ flags_o [3:0] $end
    $var wire  3 % op [2:0] $end
    $var wire  9 S r_as [8:0] $end
    $var wire  8 / r_o [7:0] $end
    $var wire  1 Q sub $end
    $var wire 10 R tmp [9:0] $end
   $upscope $end
   $scope module dec0 $end
    $var wire  1 & a_imm_alu_o $end
    $var wire  4 $ flags_alu_i [3:0] $end
    $var wire  3 % func_alu_o [2:0] $end
    $var wire  1 x halt_core_o $end
    $var wire  2 # mode_pc_o [1:0] $end
    $var wire  6 ' op_code_i [5:0] $end
    $var wire  1 ( wr_en_rf_o $end
   $upscope $end
   $scope module pc0 $end
    $var wire 10 s addr_o [9:0] $end
    $var wire  1 t clk_i $end
    $var wire  8 , data_i [7:0] $end
    $var wire  2 # mode_i [1:0] $end
    $var wire  1 u n_rst_i $end
   $upscope $end
   $scope module rf0 $end
    $var wire  1 t clk_i $end
    $var wire  5 * rd_addr_i [4:0] $end
    $var wire  8 . rd_data_o [7:0] $end
    $var wire  8 T regs(1) [7:0] $end
    $var wire  8 ] regs(10) [7:0] $end
    $var wire  8 ^ regs(11) [7:0] $end
    $var wire  8 _ regs(12) [7:0] $end
    $var wire  8 ` regs(13) [7:0] $end
    $var wire  8 a regs(14) [7:0] $end
    $var wire  8 b regs(15) [7:0] $end
    $var wire  8 c regs(16) [7:0] $end
    $var wire  8 d regs(17) [7:0] $end
    $var wire  8 e regs(18) [7:0] $end
    $var wire  8 f regs(19) [7:0] $end
    $var wire  8 U regs(2) [7:0] $end
    $var wire  8 g regs(20) [7:0] $end
    $var wire  8 h regs(21) [7:0] $end
    $var wire  8 i regs(22) [7:0] $end
    $var wire  8 j regs(23) [7:0] $end
    $var wire  8 k regs(24) [7:0] $end
    $var wire  8 l regs(25) [7:0] $end
    $var wire  8 m regs(26) [7:0] $end
    $var wire  8 n regs(27) [7:0] $end
    $var wire  8 o regs(28) [7:0] $end
    $var wire  8 p regs(29) [7:0] $end
    $var wire  8 V regs(3) [7:0] $end
    $var wire  8 q regs(30) [7:0] $end
    $var wire  8 r regs(31) [7:0] $end
    $var wire  8 W regs(4) [7:0] $end
    $var wire  8 X regs(5) [7:0] $end
    $var wire  8 Y regs(6) [7:0] $end
    $var wire  8 Z regs(7) [7:0] $end
    $var wire  8 [ regs(8) [7:0] $end
    $var wire  8 \ regs(9) [7:0] $end
    $var wire  8 0 regs_rd(0) [7:0] $end
    $var wire  8 1 regs_rd(1) [7:0] $end
    $var wire  8 : regs_rd(10) [7:0] $end
    $var wire  8 ; regs_rd(11) [7:0] $end
    $var wire  8 < regs_rd(12) [7:0] $end
    $var wire  8 = regs_rd(13) [7:0] $end
    $var wire  8 > regs_rd(14) [7:0] $end
    $var wire  8 ? regs_rd(15) [7:0] $end
    $var wire  8 @ regs_rd(16) [7:0] $end
    $var wire  8 A regs_rd(17) [7:0] $end
    $var wire  8 B regs_rd(18) [7:0] $end
    $var wire  8 C regs_rd(19) [7:0] $end
    $var wire  8 2 regs_rd(2) [7:0] $end
    $var wire  8 D regs_rd(20) [7:0] $end
    $var wire  8 E regs_rd(21) [7:0] $end
    $var wire  8 F regs_rd(22) [7:0] $end
    $var wire  8 G regs_rd(23) [7:0] $end
    $var wire  8 H regs_rd(24) [7:0] $end
    $var wire  8 I regs_rd(25) [7:0] $end
    $var wire  8 J regs_rd(26) [7:0] $end
    $var wire  8 K regs_rd(27) [7:0] $end
    $var wire  8 L regs_rd(28) [7:0] $end
    $var wire  8 M regs_rd(29) [7:0] $end
    $var wire  8 3 regs_rd(3) [7:0] $end
    $var wire  8 N regs_rd(30) [7:0] $end
    $var wire  8 O regs_rd(31) [7:0] $end
    $var wire  8 4 regs_rd(4) [7:0] $end
    $var wire  8 5 regs_rd(5) [7:0] $end
    $var wire  8 6 regs_rd(6) [7:0] $end
    $var wire  8 7 regs_rd(7) [7:0] $end
    $var wire  8 8 regs_rd(8) [7:0] $end
    $var wire  8 9 regs_rd(9) [7:0] $end
    $var wire  5 + rs_addr_i [4:0] $end
    $var wire  8 - rs_data_o [7:0] $end
    $var wire  8 / wd_data_i [7:0] $end
    $var wire  1 ( wr_en_i $end
   $upscope $end
   $scope module rom0 $end
    $var wire 10 s addr_i [9:0] $end
    $var wire 24 ) data_o [23:0] $end
   $upscope $end
  $upscope $end
  $scope module pico $end
   $var wire 32 y A [31:0] $end
   $var wire 32 z N [31:0] $end
   $var wire 32 { R [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b01 #
b1000 $
b001 %
0&
b000001 '
1(
b000001000000000000000000 )
b00000 *
b00000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
b00000000 <
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
b00000000 D
b00000000 E
b00000000 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000 O
b00000000 P
0Q
b0000000000 R
b000000000 S
b00000000 T
b00000000 U
b00000000 V
b00000000 W
b00000000 X
b00000000 Y
b00000000 Z
b00000000 [
b00000000 \
b00000000 ]
b00000000 ^
b00000000 _
b00000000 `
b00000000 a
b00000000 b
b00000000 c
b00000000 d
b00000000 e
b00000000 f
b00000000 g
b00000000 h
b00000000 i
b00000000 j
b00000000 k
b00000000 l
b00000000 m
b00000000 n
b00000000 o
b00000000 p
b00000000 q
b00000000 r
b0000000000 s
1t
0u
0v
b00000000 w
0x
b00000000000000000000000000001010 y
b00000000000000000000000000001000 z
b00000000000000000000000000100000 {
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11
0t
#12
1u
#13
#14
#15
#16
#17
#18
#19
#20
#21
b0000 $
1&
b010001 '
b010001000010000000000011 )
b00001 *
b00000011 ,
b00000011 /
b00000011 P
b0000000110 R
b000000011 S
b0000000001 s
1t
#22
#23
#24
#25
#26
#27
#28
#29
#30
#31
0t
#32
#33
#34
#35
#36
#37
#38
#39
#40
#41
b010001000100000000000010 )
b00010 *
b00000010 ,
b00000010 /
b00000011 1
b00000010 P
b0000000100 R
b000000010 S
b00000011 T
b0000000010 s
1t
#42
#43
#44
#45
#46
#47
#48
#49
#50
#51
0t
#52
#53
#54
#55
#56
#57
#58
#59
#60
#61
b010001000110000000000101 )
b00011 *
b00000101 ,
b00000101 /
b00000010 2
b00000101 P
b0000001010 R
b000000101 S
b00000010 U
b0000000011 s
1t
#62
#63
#64
#65
#66
#67
#68
#69
#70
#71
0t
#72
#73
#74
#75
#76
#77
#78
#79
#80
#81
b1000 $
b010001001000000000000000 )
b00100 *
b00000000 ,
b00000000 /
b00000101 3
b00000000 P
b0000000000 R
b000000000 S
b00000101 V
b0000000100 s
1t
#82
#83
#84
#85
#86
#87
#88
#89
#90
#91
0t
#92
#93
#94
#95
#96
#97
#98
#99
#100
#101
b0000 $
0&
b000001 '
b000001000010001000000000 )
b00001 *
b00010 +
b00000010 -
b00000011 .
b00000101 /
b00000011 P
b0000001010 R
b000000101 S
b0000000101 s
1t
#102
#103
#104
#105
#106
#107
#108
#109
#110
#111
0t
#112
#113
#114
#115
#116
#117
#118
#119
#120
#121
b011 %
b000011 '
b000011000100000100000000 )
b00010 *
b00001 +
b00000101 -
b00000010 .
b00001010 /
b00000101 1
b00000010 P
b0000001110 R
b000000111 S
b00000101 T
b0000000110 s
1t
#122
#123
#124
#125
#126
#127
#128
#129
#130
#131
0t
#132
#133
#134
#135
#136
#137
#138
#139
#140
#141
b001 %
1&
b010001 '
b010001001000010000000001 )
b00100 *
b00100 +
b00000001 ,
b00000000 -
b00000000 .
b00000001 /
b00001010 2
b00000001 P
b0000000010 R
b000000001 S
b00001010 U
b0000000111 s
1t
#142
#143
#144
#145
#146
#147
#148
#149
#150
#151
0t
#152
#153
#154
#155
#156
#157
#158
#159
#160
#161
b10 #
b0101 $
b010 %
0&
b001001 '
0(
b001001001000001111111101 )
b00011 +
b11111101 ,
b00000101 -
b00000001 .
b11111100 /
b00000001 4
1Q
b1111111000 R
b111111100 S
b00000001 W
b0000001000 s
1t
#162
#163
#164
#165
#166
#167
#168
#169
#170
#171
0t
#172
#173
#174
#175
#176
#177
#178
#179
#180
#181
b01 #
b0000 $
b001 %
b000001 '
1(
b000001000010001000000000 )
b00001 *
b00010 +
b00000000 ,
b00001010 -
b00000101 .
b00001111 /
b00000101 P
0Q
b0000011110 R
b000001111 S
b0000000101 s
1t
#182
#183
#184
#185
#186
#187
#188
#189
#190
#191
0t
#192
#193
#194
#195
#196
#197
#198
#199
#200
#201
b011 %
b000011 '
b000011000100000100000000 )
b00010 *
b00001 +
b00001111 -
b00001010 .
b10010110 /
b00001111 1
b00001010 P
b0000110010 R
b000011001 S
b00001111 T
b0000000110 s
1t
#202
#203
#204
#205
#206
#207
#208
#209
#210
#211
0t
#212
#213
#214
#215
#216
#217
#218
#219
#220
#221
b001 %
1&
b010001 '
b010001001000010000000001 )
b00100 *
b00100 +
b00000001 ,
b00000001 -
b00000001 .
b00000010 /
b10010110 2
b00000001 P
b0000000100 R
b000000010 S
b10010110 U
b0000000111 s
1t
#222
#223
#224
#225
#226
#227
#228
#229
#230
#231
0t
#232
#233
#234
#235
#236
#237
#238
#239
#240
#241
b10 #
b0101 $
b010 %
0&
b001001 '
0(
b001001001000001111111101 )
b00011 +
b11111101 ,
b00000101 -
b00000010 .
b11111101 /
b00000010 4
b00000010 P
1Q
b1111111010 R
b111111101 S
b00000010 W
b0000001000 s
1t
#242
#243
#244
#245
#246
#247
#248
#249
#250
#251
0t
#252
#253
#254
#255
#256
#257
#258
#259
#260
#261
b01 #
b0100 $
b001 %
b000001 '
1(
b000001000010001000000000 )
b00001 *
b00010 +
b00000000 ,
b10010110 -
b00001111 .
b10100101 /
b00001111 P
0Q
b0101001010 R
b010100101 S
b0000000101 s
1t
#262
#263
#264
#265
#266
#267
#268
#269
#270
#271
0t
#272
#273
#274
#275
#276
#277
#278
#279
#280
#281
b0011 $
b011 %
b000011 '
b000011000100000100000000 )
b00010 *
b00001 +
b10100101 -
b10010110 .
b10101110 /
b10100101 1
b10010110 P
b1001110110 R
b100111011 S
b10100101 T
b0000000110 s
1t
#282
#283
#284
#285
#286
#287
#288
#289
#290
#291
0t
#292
#293
#294
#295
#296
#297
#298
#299
#300
#301
b0000 $
b001 %
1&
b010001 '
b010001001000010000000001 )
b00100 *
b00100 +
b00000001 ,
b00000010 -
b00000010 .
b00000011 /
b10101110 2
b00000001 P
b0000000110 R
b000000011 S
b10101110 U
b0000000111 s
1t
#302
#303
#304
#305
#306
#307
#308
#309
#310
#311
0t
#312
#313
#314
#315
#316
#317
#318
#319
#320
#321
b10 #
b0101 $
b010 %
0&
b001001 '
0(
b001001001000001111111101 )
b00011 +
b11111101 ,
b00000101 -
b00000011 .
b11111110 /
b00000011 4
b00000011 P
1Q
b1111111100 R
b111111110 S
b00000011 W
b0000001000 s
1t
#322
#323
#324
#325
#326
#327
#328
#329
#330
#331
0t
#332
#333
#334
#335
#336
#337
#338
#339
#340
#341
b01 #
b0011 $
b001 %
b000001 '
1(
b000001000010001000000000 )
b00001 *
b00010 +
b00000000 ,
b10101110 -
b10100101 .
b01010011 /
b10100101 P
0Q
b1010100110 R
b101010011 S
b0000000101 s
1t
#342
#343
#344
#345
#346
#347
#348
#349
#350
#351
0t
#352
#353
#354
#355
#356
#357
#358
#359
#360
#361
b0001 $
b011 %
b000011 '
b000011000100000100000000 )
b00010 *
b00001 +
b01010011 -
b10101110 .
b01101010 /
b01010011 1
b10101110 P
b1000000010 R
b100000001 S
b01010011 T
b0000000110 s
1t
#362
#363
#364
#365
#366
#367
#368
#369
#370
#371
0t
#372
#373
#374
#375
#376
#377
#378
#379
#380
#381
b0000 $
b001 %
1&
b010001 '
b010001001000010000000001 )
b00100 *
b00100 +
b00000001 ,
b00000011 -
b00000011 .
b00000100 /
b01101010 2
b00000001 P
b0000001000 R
b000000100 S
b01101010 U
b0000000111 s
1t
#382
#383
#384
#385
#386
#387
#388
#389
#390
#391
0t
#392
#393
#394
#395
#396
#397
#398
#399
#400
#401
b10 #
b0101 $
b010 %
0&
b001001 '
0(
b001001001000001111111101 )
b00011 +
b11111101 ,
b00000101 -
b00000100 .
b11111111 /
b00000100 4
b00000100 P
1Q
b1111111110 R
b111111111 S
b00000100 W
b0000001000 s
1t
#402
#403
#404
#405
#406
#407
#408
#409
#410
#411
0t
#412
#413
#414
#415
#416
#417
#418
#419
#420
#421
b01 #
b0110 $
b001 %
b000001 '
1(
b000001000010001000000000 )
b00001 *
b00010 +
b00000000 ,
b01101010 -
b01010011 .
b10111101 /
b01010011 P
0Q
b0101111010 R
b010111101 S
b0000000101 s
1t
#422
#423
#424
#425
#426
#427
#428
#429
#430
#431
0t
#432
#433
#434
#435
#436
#437
#438
#439
#440
#441
b0001 $
b011 %
b000011 '
b000011000100000100000000 )
b00010 *
b00001 +
b10111101 -
b01101010 .
b01000010 /
b10111101 1
b01101010 P
b1001001110 R
b100100111 S
b10111101 T
b0000000110 s
1t
#442
#443
#444
#445
#446
#447
#448
#449
#450
#451
0t
#452
#453
#454
#455
#456
#457
#458
#459
#460
#461
b0000 $
b001 %
1&
b010001 '
b010001001000010000000001 )
b00100 *
b00100 +
b00000001 ,
b00000100 -
b00000100 .
b00000101 /
b01000010 2
b00000001 P
b0000001010 R
b000000101 S
b01000010 U
b0000000111 s
1t
#462
#463
#464
#465
#466
#467
#468
#469
#470
#471
0t
#472
#473
#474
#475
#476
#477
#478
#479
#480
#481
b1000 $
b010 %
0&
b001001 '
0(
b001001001000001111111101 )
b00011 +
b11111101 ,
b00000101 -
b00000101 .
b00000000 /
b00000101 4
b00000101 P
1Q
b0000000000 R
b000000000 S
b00000101 W
b0000001000 s
1t
#482
#483
#484
#485
#486
#487
#488
#489
#490
#491
0t
#492
#493
#494
#495
#496
#497
#498
#499
#500
#501
b00 #
b000 %
b000000 '
b000000000000000000000000 )
b00000 *
b00000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 P
0Q
b0000001001 s
1t
1x
#502
#503
#504
#505
#506
#507
#508
#509
#510
#511
0t
#512
#513
#514
#515
#516
#517
#518
#519
#520
#521
1t
